package experiments
import module._
import constructor._

object Layering {
	
	private def layeringPackages(tdg: TypeStructure, pdg: PackageStructure)  = {
		val spdg = pdg.simplifyStructure
		
		val lpdg = new LayeredPackageStructure(tdg)
		lpdg.layeringPackages(spdg)
		lpdg.liftEdges()

		val clpdg = (new LayeredModuleIcebergs(lpdg)).compact(tdg)
		Graph2Dot.toDot(clpdg, projects.Project.proj.getHomePath + "CLP")
	
	}

	def main(args : Array[String]) : Unit = {
	  	val dgs = GraphFile.load(projects.Project.proj.getHomePath + "TypeStructure.lci")
	  	val pdg = dgs._2.retainPackages(projects.Project.proj.prefixes).simplifyStructure
	  	
		layeringPackages(dgs._1, pdg)
		
		println(projects.Project.get.toFile)
	}
}
