package experiments

class HadoopStudy  extends PackageCycleAnalysis {

	override def getViolationMap: Map[String, List[String]] = {
		Map[String, List[String]](
					"conf" -> List("io"),
					"util" -> List("fs", "io"),
					"io" -> List("fs", "util"),
					"fs" -> List("util", "io")
				)
	}
	override def getNewPacakgeMap: Map[String, List[List[Int]]] = {
		Map[String, List[List[Int]]] (
				"io" -> List(List(0), List(1,2,3,4)),
				"mapreduce" -> List(List(0, 1, 2), List(3, 4, 5))
		)
	}
	override def getRefactoredEdges: Map[(String, String), (List[Int], List[Int])]  = {
		Map[(String, String), (List[Int], List[Int])]  (
				("util", "io") ->  (List(1,2), List(1, 2)),
				("util", "fs") ->  (List(3), List(3)),
				("mapreduce", "mapred") -> (List(2, 4), List(0, 1, 2, 3, 4)),
				("conf", "io") -> (List(1), List(1)),
				("fs", "io") -> (List(1, 2, 3, 4), List(1, 2, 3))
		)
	}	
}

object HadoopStudy {
	def main(args : Array[String]) : Unit = {
		projects.Project.proj = (new projects.HadoopCase)
		(new HadoopStudy).run
	}
}