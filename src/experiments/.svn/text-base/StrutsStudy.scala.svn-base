package experiments

class StrutsStudy extends PackageCycleAnalysis {

	override def  getViolationMap: Map[String, List[String]]  = {
		Map[String, List[String]](
					"components" -> List("views.jsp"),
					"config" -> List("dispatcher"),
					"util" -> List("dispatcher")
					
				)
	}

	override def getNewPacakgeMap: Map[String, List[List[Int]]] = {
		Map[String, List[List[Int]]] (
				//"." -> List(List(0), List(1, 2, 3, 4, 5)),
				//"views.jsp" -> List(List(0, 1), List( 2, 3, 4, 5, 6))
		)
	}
	override def getRefactoredEdges: Map[(String, String), (List[Int], List[Int])]  = {
		Map[(String, String), (List[Int], List[Int])]  (
				("components", "views.jsp") ->  (List(1, 2), List(1, 0)),
				("config", "dispatcher") -> (List(1), List(0))
		)
	}	
}

object StrutsStudy {
	def main(args : Array[String]) : Unit = {
			projects.Project.proj = (new projects.StrutsCase)
		(new StrutsStudy).run()
	}
}